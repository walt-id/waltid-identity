apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-db-config
data:
  db.conf: |
    database = "db.sqlite"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-datasource-config
data:
  db.sqlite.conf: |
    hikariDataSource {
        jdbcUrl = "jdbc:sqlite:/waltid-wallet-api/data/data.db"
        driverClassName = "org.sqlite.JDBC"
        username = ""
        password = ""
        transactionIsolation = "TRANSACTION_SERIALIZABLE"
        maximumPoolSize = 5
        autoCommit = false
        dataSource {
            journalMode = "WAL"
            fullColumnNames = false
        }
    }
    recreateDatabaseOnStart = false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-wallet-config
data:
  wallet.conf: |
    remoteWallet = "https://walletkit.walt.id"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-web-config
data:
  web.conf: |
    webHost = "0.0.0.0"
    webPort = 4545
    publicBaseUrl = "https://wallet.walt.id"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-oidc-config
data:
  oidc.conf: |
    enableOidcLogin = true
    providerName = keycloak
    oidcRealm = "https://keycloak.walt-test.cloud/realms/waltid-keycloak-ktor"
    oidcJwks = "${oidcRealm}/protocol/openid-connect/certs"
    authorizeUrl = "${oidcRealm}/protocol/openid-connect/auth"
    accessTokenUrl = "${oidcRealm}/protocol/openid-connect/token"
    logoutUrl = "${oidcRealm}/protocol/openid-connect/logout"
    clientId = "wallet_backend_prod"
    clientSecret = "hhzmJsLdJgtbFGKR0GUvUWDMS7SmFoSm"
    jwksCache = {
        cacheSize = 10
        cacheExpirationHours = 24
        rateLimit: {
            bucketSize: 10
            refillRateMinutes: 1
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-marketplace-config
data:
  marketplace.conf: |
    marketplaces = [
      {chain = "ethereum", name = "OpenSea", url = "https://opensea.io/assets/ethereum/%s/%s"},
      {chain = "polygon", name = "OpenSea", url = "https://opensea.io/assets/matic/%s/%s"},
      {chain = "tezos", name = "Rarible", url = "https://rarible.com/token/tezos/%s/%s"},
      {chain = "flow", name = "FlowVerse", url = "https://nft.flowverse.co/marketplace/%s/%s"},
      {chain = "unique", name = "Unique", url = "https://unqnft.io/market/%s/%s"},
    ]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-chainexplorer-config
data:
  chainexplorer.conf: |
    explorers = [
      {chain = "ethereum", url = "https://etherscan.io/address/%s"},
      {chain = "polygon", url = "https://polygonscan.com/address/%s"},
      {chain = "mumbai", url = "https://mumbai.polygonscan.com/address/%s"},
      {chain = "tezos", url = "https://tzkt.io/%s/operations"},
      {chain = "ghostnet", url = "https://ghostnet.tzkt.io/%s/operations"},
    ]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wallet-data-volume-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: wallet-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wallet-api
  template:
    metadata:
      labels:
        app: wallet-api
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: wallet-api
          image: waltid/wallet-api:latest
          volumeMounts:
            - name: wallet-db-config
              mountPath: "/waltid-wallet-api/config/db.conf"
              subPath: "db.conf"
              readOnly: true
            - name: wallet-datasource-config
              mountPath: "/waltid-wallet-api/config/db.sqlite.conf"
              subPath: "db.sqlite.conf"
              readOnly: true
            - name: wallet-wallet-config
              mountPath: "/waltid-wallet-api/config/wallet.conf"
              subPath: "wallet.conf"
              readOnly: true
            - name: wallet-web-config
              mountPath: "/waltid-wallet-api/config/web.conf"
              subPath: "web.conf"
              readOnly: true
            - name: wallet-oidc-config
              mountPath: "/waltid-wallet-api/config/oidc.conf"
              subPath: "oidc.conf"
              readOnly: true
            - name: wallet-marketplace-config
              mountPath: "/waltid-wallet-api/config/marketplace.conf"
              subPath: "marketplace.conf"
              readOnly: true
            - name: wallet-chainexplorer-config
              mountPath: "/waltid-wallet-api/config/chainexplorer.conf"
              subPath: "chainexplorer.conf"
              readOnly: true
            - name: wallet-push-config
              mountPath: "/waltid-wallet-api/config/push.conf"
              subPath: "push.conf"
              readOnly: true
            - name: wallet-trust-config
              mountPath: "/waltid-wallet-api/config/trust.conf"
              subPath: "trust.conf"
              readOnly: true
            - name: wallet-nft-config
              mountPath: "/waltid-wallet-api/walt.yaml"
              subPath: "walt.yaml"
              readOnly: true
            - mountPath: "/waltid-wallet-api/data/"
              name: wallet-data
          ports:
            - containerPort: 4545
              name: http-api
      volumes:
        - name: wallet-db-config
          configMap:
            name: wallet-db-config
        - name: wallet-datasource-config
          configMap:
            name: wallet-datasource-config
        - name: wallet-wallet-config
          configMap:
            name: wallet-wallet-config
        - name: wallet-web-config
          configMap:
            name: wallet-web-config
        - name: wallet-oidc-config
          configMap:
            name: wallet-oidc-config
        - name: wallet-marketplace-config
          configMap:
            name: wallet-marketplace-config
        - name: wallet-chainexplorer-config
          configMap:
            name: wallet-chainexplorer-config
        - name: wallet-push-config
          secret:
            secretName: wallet-push-config-secret
        - name: wallet-trust-config
          configMap:
            name: wallet-trust-config
        - name: wallet-nft-config
          secret:
            secretName: wallet-nft-config-secret
        - name: wallet-data
          persistentVolumeClaim:
            claimName: wallet-data-volume-claim
---
kind: Service
apiVersion: v1
metadata:
  name: wallet-api
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: wallet-api
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: waltid-web-wallet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: waltid-web-wallet
  template:
    metadata:
      labels:
        app: waltid-web-wallet
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: waltid-web-wallet
          image: waltid/waltid-web-wallet:latest
          env:
            - name: NUXT_PUBLIC_ISSUER_CALLBACK_URL
              value: "https://wallet.walt.id"
          ports:
            - containerPort: 3000
              name: http-api
---
kind: Service
apiVersion: v1
metadata:
  name: waltid-web-wallet
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: waltid-web-wallet
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wallet-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - wallet.walt.id
      secretName: wallet-tls-secret
  rules:
    - host: wallet.walt.id
      http:
        paths:
          - path: /wallet-api/
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /swagger
            pathType: Prefix
            backend:
              service:
                name: wallet-api
                port:
                  name: http
          - path: /
            pathType: Prefix
            backend:
              service:
                name: waltid-web-wallet
                port:
                  name: http
