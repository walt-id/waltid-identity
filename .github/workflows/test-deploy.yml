name: Deploy manually to test environment

on:
  workflow_dispatch:

jobs:
  build:
    name: "Deploy to test environment"
    runs-on: "ubuntu-latest"
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          docker-images: false
      - uses: actions/checkout@v3
      - name: Calculate release version
        run: |
          BRANCH=$(echo ${{ github.ref }} | sed -e 's/refs\/heads\///' -e 's/\//-/g')
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "release_version=1.0.$(date +'%g%m%d%H%M')-${BRANCH}" >> $GITHUB_ENV
      - name: Set version
        run: |
          sed -i "s/1.0.0-SNAPSHOT/${{ env.release_version }}/g" build.gradle.kts
      - run: |
          git tag v${{ env.release_version }}
          git push --tags
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v3
      - name: Running gradle build
        uses: eskatos/gradle-command-action@v3.3.2
        with:
          arguments: build --no-daemon

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images (issuer)
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          file: waltid-issuer-api/Dockerfile
          tags: waltid/issuer-api:dev, waltid/issuer-api:${{ env.release_version }}
      - name: Build and push Docker images (verifier)
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          file: waltid-verifier-api/Dockerfile
          tags: waltid/verifier-api:dev, waltid/verifier-api:${{ env.release_version }}
      - name: Build and push Docker images (wallet-api)
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          file: waltid-wallet-api/Dockerfile
          tags: waltid/wallet-api:dev, waltid/wallet-api:${{ env.release_version }}
      - name: Build and push Docker images (waltid-web-wallet)
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          file: waltid-web-wallet/Dockerfile
          tags: waltid/waltid-web-wallet:dev, waltid/waltid-web-wallet:${{ env.release_version }}
      - name: Build and push Docker images (wallet-portal)
        uses: docker/build-push-action@v4
        with:
          push: true
          file: waltid-web-portal/Dockerfile
          tags: waltid/portal:dev, waltid/portal:${{ env.release_version }}

      - name: Prepare CD - issuer
        run: sed "s/_DEFAULT_DEPLOYMENT_/$GITHUB_SHA/g" waltid-issuer-api/k8s/deployment-dev.yaml > waltid-issuer-api/k8s/deployment_mod.yaml
      - name: Continuous deployment - issuer
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -n dev -f waltid-issuer-api/k8s/deployment_mod.yaml
      - name: Prepare CD - verifier
        run: sed "s/_DEFAULT_DEPLOYMENT_/$GITHUB_SHA/g" waltid-verifier-api/k8s/deployment-dev.yaml > waltid-verifier-api/k8s/deployment_mod.yaml
      - name: Continuous deployment - verifier
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -n dev -f waltid-verifier-api/k8s/deployment_mod.yaml
      - name: Prepare CD - wallet.walt-test.cloud
        env:
          DEV_KEYCLOAK_CLIENT_SECRET: ${{ secrets.DEV_KEYCLOAK_CLIENT_SECRET }}

        run: sed "s/_DEFAULT_DEPLOYMENT_/$GITHUB_SHA/g" waltid-wallet-api/k8s/deployment-dev.yaml |
          sed "s/__DEFAULT_KEYCLOAK_CLIENT_SECRET__/$DEV_KEYCLOAK_CLIENT_SECRET/g" > waltid-wallet-api/k8s/deployment_mod.yaml

      - name: Continuous deployment - wallet.walt-test.cloud
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -n dev -f waltid-wallet-api/k8s/deployment_mod.yaml
      - name: Prepare CD - portal.walt.id
        run: sed "s/_DEFAULT_DEPLOYMENT_/$GITHUB_SHA/g" waltid-web-portal/k8s/deployment-dev.yaml > waltid-web-portal/k8s/deployment_mod.yaml
      - name: Continuous deployment - portal.walt.id
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -n dev -f waltid-web-portal/k8s/deployment_mod.yaml
