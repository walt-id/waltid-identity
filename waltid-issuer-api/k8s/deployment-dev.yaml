apiVersion: v1
kind: ConfigMap
metadata:
  name: issuer-web-config
data:
  web.conf: |
    webHost = "0.0.0.0"
    webPort = 3000
  issuer-service.conf: |
    baseUrl = "https://issuer.portal.walt-test.cloud"
  credential-issuer-metadata.conf: |
    supportedCredentialTypes = """
    [
      {
        "id": "BankId",
        "type": [
          "VerifiableCredential",
          "BankId"
        ]
      },
      {
        "id": "KycChecksCredential",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "KycChecksCredential"
        ]
      },
      {
        "id": "KycCredential",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "KycCredential"
        ]
      },
      {
        "id": "KycDataCredential",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "KycDataCredential"
        ]
      },
      {
        "id": "PassportCh",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "VerifiableId",
          "PassportCh"
        ]
      },
      {
        "id": "PND91Credential",
        "type": [
          "VerifiableCredential",
          "PND91Credential"
        ]
      },
      {
        "id": "MortgageEligibility",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "VerifiableId",
          "MortgageEligibility"
        ]
      },
      {
        "id": "PortableDocumentA1",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "PortableDocumentA1"
        ]
      },
      {
        "id": "OpenBadgeCredential",
        "type": [
          "VerifiableCredential",
          "OpenBadgeCredential"
        ]
      },
      {
        "id": "VaccinationCertificate",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "VaccinationCertificate"
        ]
      },
      {
        "id": "WalletHolderCredential",
        "type": [
          "VerifiableCredential",
          "WalletHolderCredential"
        ]
      },
      {
        "id": "UniversityDegree",
        "type": [
          "VerifiableCredential",
          "UniversityDegree"
        ]
      },
      {
        "id": "VerifiableId",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "VerifiableId"
        ]
      },
      {
        "id": "CTWalletSameAuthorisedInTime",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "CTWalletSameAuthorisedInTime"
        ]
      },
      {
        "id": "CTWalletSameAuthorisedDeferred",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "CTWalletSameAuthorisedDeferred"
        ]
      },
      {
        "id": "CTWalletSamePreAuthorisedInTime",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "CTWalletSamePreAuthorisedInTime"
        ]
      },
      {
        "id": "CTWalletSamePreAuthorisedDeferred",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "CTWalletSamePreAuthorisedInTime"
        ]
      },
      {
        "id": "AlpsTourReservation",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "AlpsTourReservation"
        ]
      },
      {
        "id": "EducationalID",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "EducationalID"
        ]
      },
      {
        "id": "AlpsTourReservation",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "AlpsTourReservation"
        ]
      },
      {
        "id": "HotelReservation",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "HotelReservation"
        ]
      },
      {
        "id": "Iso18013DriversLicenseCredential",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "Iso18013DriversLicenseCredential"
        ]
      },
      {
        "id": "TaxReceipt",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "TaxReceipt"
        ]
      },
      {
        "id": "VerifiablePortableDocumentA1",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "VerifiablePortableDocumentA1"
        ]
      },
      {
        "id": "Visa",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "Visa"
        ]
      },
      {
        "id": "eID",
        "type": [
          "VerifiableCredential",
          "VerifiableAttestation",
          "eID"
        ]
      }
    ]
    """
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: issuer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: issuer
  template:
    metadata:
      labels:
        app: issuer
      annotations:
        deployment/id: "_DEFAULT_DEPLOYMENT_"
    spec:
      containers:
        - name: issuer
          image: waltid/issuer-api:dev
          imagePullPolicy: Always
          volumeMounts:
            - name: issuer-web-config
              mountPath: "/waltid-issuer-api/config/"
              readOnly: true
          ports:
            - containerPort: 3000
              name: http-api
      volumes:
        - name: issuer-web-config
          configMap:
            name: issuer-web-config
---
kind: Service
apiVersion: v1
metadata:
  name: issuer
spec:
  ports:
    - name: http
      port: 80
      targetPort: http-api
      protocol: TCP
  selector:
    app: issuer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: issuer
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - issuer.portal.walt-test.cloud
      secretName: issuer-tls-secret
  rules:
    - host: issuer.portal.walt-test.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: issuer
                port:
                  name: http
