// Setup what key should be generated on registration
defaultKeyConfig: {
    backend: jwk
    keyType: secp256r1
}

// Setup what DID should be generated based on above above defined key on registration
defaultDidConfig: {
    method: jwk
}

defaultIssuerConfig: {
    did = "did:web:walt.id",
    description = "walt.id issuer portal",
    uiEndpoint = "https://portal.demo.walt.id/credentials?ids=",
    configurationEndpoint = "https://issuer.demo.walt.id/.well-known/openid-credential-issuer",
    authorized = false,
}

// -- Hashicorp Vault TSE key example --
// defaultKeyConfig: {
//     backend: tse
//     config: {
//         server: "http://127.0.0.1:8200/v1/transit"
//         accessKey: "<your token here>"
//     }
//     keyType: Ed25519
// }

// -- Oracle Cloud Infrastructure Vault KMS key example --
// defaultKeyConfig: {
//     backend: oci
//     config: {
//         tenancyOcid: "ocid1.tenancy.oc1..<long id>",
//         userOcid: "ocid1.user.oc1..<long id>",
//         fingerprint: "aa:bb:cc:dd:ee:ff:00:11:22:33:44:55:66:77:88:99",
//         cryptoEndpoint: "<some id>-crypto.kms.<the location>.oraclecloud.com",
//         managementEndpoint: "<some id>-management.kms.<the location>.oraclecloud.com",
//         signingKeyPem: "<private request signing key in PEM format>"
//     }
//     keyType: secp256r1
// }

// -- did:web example --
// defaultDidConfig: {
//     method: web
//     config: {
//         domain: "https://wallet.walt.id"
//         path: "/wallet-api/registry/[random-uuid]" // automatically generates random Uuid for path
//     }
// }
